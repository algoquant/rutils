% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rutils.R
\name{get_name}
\alias{get_name}
\title{Extract symbol names (tickers) from a vector of \emph{character} strings.}
\usage{
get_name(strng, posv = 1, sep = "[.]")
}
\arguments{
\item{\code{strng}}{A vector of \emph{character} strings containing symbol
names.}

\item{\code{posv}}{The position of the name in the string, i.e. the integer
index of the field to be extracted (the default is \code{1}, i.e. the name
is at the beginning of the string,)}

\item{\code{sep}}{The name separator, i.e. the single \emph{character}
that separates the symbol name from the rest of the string (the default is
"\code{[.]}").}
}
\value{
A vector of \emph{character} \emph{strings} containing symbol names.
}
\description{
Extract symbol names (tickers) from a vector of \emph{character} strings.
}
\details{
The function \code{get_name()} extracts the symbol names (tickers)
  from a vector of \emph{character} strings. If the input is a vector of
  strings, then \code{get_name()} returns a vector of names.

  The input string is assumed to be in the format "\emph{name}.csv", with the
  name at the beginning of the string, but \code{get_name()} can also parse
  the name from other string formats as well. For example, it extracts the
  name "VTI" from the string "VTI.Close", or it extracts the name "XLU" from
  the string "XLU2017_09_05.csv" (with \code{sep="_"}).
}
\examples{
# Extract symbols "XLU" and"XLP" from file names
rutils::get_name(c("XLU.csv", "XLP.csv"))
# Extract symbols from file names
rutils::get_name("XLU2017_09_05.csv", sep="_")
rutils::get_name("XLU 2017 09 05.csv", sep=" ")
# Extract fields "Open", "High", "Low", "Close" from the column names
rutils::get_name(c("VTI.Open", "VTI.High", "VTI.Low", "VTI.Close"), posv=2)
}
